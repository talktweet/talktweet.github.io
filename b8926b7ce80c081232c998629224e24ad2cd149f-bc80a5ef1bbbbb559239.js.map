{"version":3,"sources":["webpack:///./src/containers/widgets/cta/cta.stc.js","webpack:///./src/containers/widgets/cta/index.js","webpack:///./src/containers/global/instagram/instagram.stc.js","webpack:///./src/containers/global/instagram/index.js","webpack:///./src/components/forms/mailchimp-two/form/mailchimp.stc.js","webpack:///./src/components/forms/mailchimp-two/form/index.js","webpack:///./src/components/forms/mailchimp-two/index.js","webpack:///./src/containers/widgets/subscribe/subscribe.stc.js","webpack:///./src/containers/widgets/subscribe/index.js"],"names":["CtaWrap","styled","div","CtaBG","BackgroundImage","CtaContent","themeGet","CTA","ctaHeading","ctaBtn","ctadataquery","bgImage","file","childImageSharp","fluid","cta","title","className","parse","path","to","icon","defaultProps","as","color","fontSize","lineHeight","letterSpacing","fontWeight","mb","colors","shape","pl","pr","SectionWrap","section","device","small","InstagramWrap","InstagramItem","xxsmall","medium","Instagram","headingCSS","textCSS","photos","allInstaNode","edges","Container","Row","Col","lg","map","photo","i","key","node","localFile","alt","preview","href","target","rel","textTransform","textAlign","display","justifyContent","alignItems","MailchimpWrap","SubmitBtn","MailchimpInner","Mailchimp","email","status","message","onValidated","useState","error","setError","ref","type","placeholder","onClick","isValidate","test","validateEmail","value","indexOf","EMAIL","varient","style","dangerouslySetInnerHTML","__html","url","site","siteMetadata","mailchimp_endpoint","render","subscribe","formData","FormWrapper","SubscribeText","p","SearchWidget","widgetStyle","widgetTitleStyle","inputStyle","skin"],"mappings":"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","file":"b8926b7ce80c081232c998629224e24ad2cd149f-bc80a5ef1bbbbb559239.js","sourcesContent":["import styled from \"styled-components\";\r\nimport BackgroundImage from 'gatsby-background-image'\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const CtaWrap = styled.div `\r\n    position: relative;\r\n    padding-top: 280px;\r\n    padding-left: 45px;\r\n    padding-bottom: 38px;\r\n    margin-bottom: 30px;\r\n    &:after{\r\n        position: absolute;\r\n        content: \"\";\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        z-index: 1;\r\n        border-radius: 6px;\r\n        background-image: -moz-linear-gradient( 45deg, rgb(248,119,124) 0%, rgba(248,119,124,0) 100%);\r\n        background-image: -webkit-linear-gradient( 45deg, rgb(248,119,124) 0%, rgba(248,119,124,0) 100%);\r\n        background-image: -ms-linear-gradient( 45deg, rgb(248,119,124) 0%, rgba(248,119,124,0) 100%);\r\n    }\r\n`;\r\n\r\nexport const CtaBG = styled(BackgroundImage)`\r\n    position: absolute !important;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    &:before,\r\n    &:after{\r\n        border-radius: 6px;\r\n    }\r\n`;\r\nexport const CtaContent = styled.div `\r\n    position: relative;\r\n    z-index: 2;\r\n    color: #fff;\r\n    .cta-heading{\r\n        span{\r\n            display: block;\r\n            font-family: ${themeGet('fonts.marck')};\r\n            font-size: 50px;\r\n            margin-top: 13px;\r\n        }\r\n    }\r\n`;","import React from 'react'\r\nimport {useStaticQuery, graphql} from 'gatsby'\r\nimport parse from 'html-react-parser'\r\nimport { FiChevronRight } from \"react-icons/fi\";\r\nimport Heading from '../../../components/shared/heading'\r\nimport Button from '../../../components/shared/button'\r\nimport {CtaWrap, CtaBG, CtaContent} from './cta.stc'\r\n\r\nconst CTA = ({ctaHeading, ctaBtn}) => {\r\n    const ctadataquery = useStaticQuery(graphql `\r\n        query WidgetCtaQuery {\r\n            file(relativePath: {eq: \"images/cta-small-image.jpg\"}) {\r\n                childImageSharp {\r\n                    fluid(maxWidth: 400, maxHeight: 480, quality: 100, srcSetBreakpoints: 6) {\r\n                        ...GatsbyImageSharpFluid_withWebp\r\n                        presentationWidth\r\n                        presentationHeight\r\n                    }\r\n                }\r\n            }\r\n            cta: homeJson(id: {eq: \"home-cta-content\"}) {\r\n                title\r\n                path\r\n            }\r\n        }\r\n    `)\r\n    const bgImage = ctadataquery.file.childImageSharp.fluid\r\n    const {cta} = ctadataquery;\r\n    return (\r\n        <CtaWrap>\r\n            <CtaBG fluid={bgImage}/>\r\n            <CtaContent>\r\n                {cta.title && <Heading {...ctaHeading} className=\"cta-heading\">{parse(cta.title)}</Heading>}\r\n                {cta.path && <Button {...ctaBtn} to={cta.path} icon={<FiChevronRight/>}>Connect With me</Button>}\r\n            </CtaContent>\r\n        </CtaWrap>\r\n    )\r\n}\r\n\r\nCTA.defaultProps = {\r\n    ctaHeading: {\r\n        as: 'h3',\r\n        color: '#fff',\r\n        fontSize: '24px',\r\n        lineHeight: 1,\r\n        letterSpacing: '3px',\r\n        fontWeight: 300,\r\n        mb: '30px'\r\n    },\r\n    ctaBtn: {\r\n        colors: \"light\",\r\n        fontWeight: 500,\r\n        shape: 'rounded',\r\n        pl: '25px',\r\n        pr: '25px'\r\n    }\r\n}\r\n\r\nexport default CTA\r\n","import styled from 'styled-components'\r\nimport { themeGet } from '@styled-system/theme-get'\r\nimport { device } from '../../../theme'\r\n\r\nexport const SectionWrap = styled.section`\r\n    padding-top: 60px;\r\n    padding-bottom: 60px;\r\n    background-color: ${themeGet(\"colors.themeColor\")};\r\n    ${device.small}{\r\n        padding-top: 80px;\r\n        padding-bottom: 80px;\r\n    }\r\n`;\r\n\r\nexport const InstagramWrap = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    margin: -5px;\r\n`;\r\n\r\nexport const InstagramItem = styled.div`\r\n    flex-basis: 100%;\r\n    max-width: 100%;\r\n    padding: 5px;\r\n    ${device.xxsmall}{\r\n        flex-basis: 50%;\r\n        max-width: 50%; \r\n    }\r\n    ${device.small}{\r\n        flex-basis: 33.3333%;\r\n        max-width: 33.3333%;\r\n    }\r\n    ${device.medium}{\r\n        flex-basis: 20%;\r\n        max-width: 20%;\r\n    }\r\n    img{\r\n        border-radius: 8px;\r\n    }\r\n    a{\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        text-indent: -999999px;\r\n    }\r\n`;","import React from 'react'\r\nimport { FiInstagram } from \"react-icons/fi\";\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport Heading from '../../../components/shared/heading'\r\nimport Text from '../../../components/shared/text'\r\nimport Image from '../../../components/image'\r\nimport { SectionWrap, InstagramWrap, InstagramItem } from './instagram.stc'\r\n\r\nconst Instagram = ({ headingCSS, textCSS }) => {\r\n  const instagramData = useStaticQuery(graphql`\r\n      query instagramQuery {\r\n        allInstaNode(limit: 5) {\r\n          edges {\r\n            node {\r\n              preview\r\n              localFile {\r\n                childImageSharp {\r\n                  fluid(maxWidth: 245, maxHeight: 245, quality: 100) {\r\n                    ...GatsbyImageSharpFluid_withWebp\r\n                    presentationWidth\r\n                    presentationHeight\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `)\r\n  const photos = instagramData.allInstaNode.edges\r\n  return (\r\n    <SectionWrap>\r\n      <Container>\r\n        <Row>\r\n          <Col lg={12}>\r\n            <Heading {...headingCSS}><FiInstagram /> <Text {...textCSS}>Me On Instagram</Text></Heading>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col lg={12}>\r\n            <InstagramWrap>\r\n              {photos && photos.map((photo, i) => (\r\n                <InstagramItem key={`instagram-${i}`}>\r\n                  {photo && photo.node && photo.node.localFile && photo.node.localFile.childImageSharp && (\r\n                    <Image fluid={photo.node.localFile.childImageSharp.fluid} alt=\"Instagram\" />\r\n                  )}\r\n                  {photo.node.preview && <a href={photo.node.preview} target=\"_blank\" rel=\"noopener noreferrer\">Preview Link</a>}\r\n                </InstagramItem>\r\n              ))}\r\n            </InstagramWrap>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </SectionWrap>\r\n  )\r\n}\r\n\r\n\r\nInstagram.defaultProps = {\r\n  headingCSS: {\r\n    as: 'h5',\r\n    textTransform: 'uppercase',\r\n    textAlign: 'center',\r\n    lineHeight: 1,\r\n    mb: '40px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center'\r\n  },\r\n  textCSS: {\r\n    as: 'span',\r\n    pl: '4px'\r\n  }\r\n}\r\n\r\nexport default Instagram\r\n","import styled from 'styled-components'\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const MailchimpWrap = styled.div `\r\n    position: relative;\r\n    input{\r\n        padding-right: 50px;\r\n        background: #fff;\r\n        color: #63696a;\r\n        border-color: ${themeGet(\"colors.themeColor\")};\r\n        height: 60px;\r\n        border-radius: 4px;\r\n        &::-webkit-input-placeholder { \r\n            color: #63696a;\r\n        }\r\n        &:-ms-input-placeholder {\r\n            color: #63696a;\r\n        }\r\n        &::placeholder {\r\n            color: #63696a;\r\n        }\r\n    }\r\n`;\r\n \r\nexport const SubmitBtn = styled.div `\r\n    position: absolute;\r\n    right: 25px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n`;\r\n\r\nexport const MailchimpInner = styled.div `\r\n    position: relative;\r\n`","import React, {useState} from 'react'\r\nimport { FiArrowRight } from \"react-icons/fi\";\r\nimport Button from '../../../shared/button'\r\nimport {MailchimpWrap, MailchimpInner, SubmitBtn} from './mailchimp.stc'\r\n\r\nconst Mailchimp = ({ status, message, onValidated }) => {\r\n    const [error, setError] = useState(false)\r\n    let email;\r\n    const submit = () => {\r\n      const isValidate = validateEmail(email.value);\r\n      setError(!isValidate)\r\n      if(isValidate){\r\n        return (\r\n          email &&\r\n          email.value.indexOf(\"@\") > -1 &&\r\n          onValidated({\r\n            EMAIL: email.value\r\n          })\r\n        )\r\n      }\r\n    }\r\n\r\n    function validateEmail(email){\r\n      return /\\S+@\\S+\\.\\S+/.test(email)\r\n    }\r\n\r\n    return (\r\n      <MailchimpWrap>\r\n        <MailchimpInner>\r\n          <input\r\n            ref={node => (email = node)}\r\n            type=\"email\"\r\n            placeholder=\"Enter Your Email\"\r\n          />\r\n          <SubmitBtn> \r\n              <Button onClick={submit} varient=\"iconButton\" color=\"#63696a\"><FiArrowRight/></Button>\r\n          </SubmitBtn>\r\n        </MailchimpInner>\r\n        {(status === \"sending\" && !error) && <div style={{ color: \"blue\" }}>sending...</div>}\r\n        {(status === \"error\" && !error) && (\r\n          <div\r\n            style={{ color: \"red\" }}\r\n            dangerouslySetInnerHTML={{ __html: message }}\r\n          />\r\n        )}\r\n        {(error && !status) && <div style={{color: 'red'}}>Please, Write a valid email</div>}\r\n        {(status === \"success\" && !error) && (\r\n          <div\r\n            style={{ color: \"green\" }}\r\n            dangerouslySetInnerHTML={{ __html: message }}\r\n          />\r\n        )}\r\n      </MailchimpWrap>\r\n    );\r\n}; \r\n\r\nexport default Mailchimp","import React, {Fragment} from 'react'\r\nimport SubscribeFrom from \"react-mailchimp-subscribe\";\r\nimport {useStaticQuery, graphql} from 'gatsby'\r\nimport MailchimpForm from './form'\r\n\r\nconst Mailchimp = () => {\r\n    const mailchimpData = useStaticQuery(graphql `\r\n        query MailchimpTwoQuery {\r\n            site {\r\n                siteMetadata {\r\n                    mailchimp_endpoint\r\n                }\r\n            }\r\n        }      \r\n    `)\r\n    const url = mailchimpData.site.siteMetadata.mailchimp_endpoint;\r\n    return (\r\n        <Fragment>\r\n            <SubscribeFrom\r\n                url={url}\r\n                render={({ subscribe, status, message }) => (\r\n                    <MailchimpForm\r\n                        status={status}\r\n                        message={message}\r\n                        onValidated={formData => subscribe(formData)}\r\n                    />\r\n            )}/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Mailchimp\r\n","import styled from 'styled-components'\r\n\r\nexport const FormWrapper = styled.div ``;\r\n\r\nexport const SubscribeText = styled.p `\r\n    color: #fff;\r\n    font-size: 14px;\r\n    margin-bottom: 26px;\r\n    margin-top: -10px;\r\n`;","import React from 'react'\r\nimport WidgetBox, {WidgetTitle} from '../../../components/shared/widget-box'\r\nimport Mailchimp from '../../../components/forms/mailchimp-two'\r\nimport {FormWrapper, SubscribeText} from './subscribe.stc'\r\n\r\nconst SearchWidget = ({widgetStyle, widgetTitleStyle, inputStyle}) => {\r\n    return (\r\n        <WidgetBox {...widgetStyle}>\r\n            <WidgetTitle {...widgetTitleStyle}>Subscribe</WidgetTitle>\r\n            <FormWrapper>\r\n                <SubscribeText>Leave your email here and stay informed about our promotions and new arrivals.</SubscribeText>\r\n                <Mailchimp/>\r\n            </FormWrapper>\r\n        </WidgetBox>\r\n    )\r\n}\r\n \r\nSearchWidget.defaultProps = {\r\n    widgetStyle: {\r\n        skin: 'primary',\r\n    },\r\n    widgetTitleStyle: {\r\n        color: '#fff'\r\n    }\r\n}\r\n \r\nexport default SearchWidget\r\n"],"sourceRoot":""}