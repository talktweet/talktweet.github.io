{"version":3,"sources":["webpack:///./src/components/forms/mailchimp/form/mailchimp.stc.js","webpack:///./src/components/forms/mailchimp/form/index.js","webpack:///./src/components/forms/mailchimp/index.js","webpack:///./src/containers/home/contact-area/contact-area.stc.js","webpack:///./src/containers/home/contact-area/index.js","webpack:///./src/assets/img/home-one-banner-shape.png","webpack:///./src/components/shared/section-title/section-title.stc.js","webpack:///./src/components/shared/section-title/index.js","webpack:///./src/components/blog/layout-two/blog.stc.js","webpack:///./src/components/blog/layout-two/index.js","webpack:///./src/containers/home/hero-area/hero-area.stc.js","webpack:///./src/containers/home/hero-area/index.js","webpack:///./src/components/pagination/pagination.stc.js","webpack:///./src/components/pagination/index.js","webpack:///./src/components/blog/layout-one/blog.stc.js","webpack:///./src/components/blog/layout-one/index.js","webpack:///./src/containers/home/feature-post-area/feature-post-area.stc.js","webpack:///./src/containers/home/feature-post-area/index.js","webpack:///./src/containers/global/sidebar/sidebar.stc.js","webpack:///./src/containers/global/sidebar/index.js"],"names":["MailchimpWrap","styled","div","themeGet","SubmitBtn","Mailchimp","email","status","undefined","message","onValidated","useState","error","setError","ref","node","type","placeholder","onClick","isValidate","test","validateEmail","value","indexOf","EMAIL","varient","style","color","dangerouslySetInnerHTML","__html","url","site","siteMetadata","mailchimp_endpoint","render","subscribe","formData","ContactWrapper","section","device","small","medium","MailChimpText","CtaWrapper","CtaBG","BackgroundImage","CtaContent","large","ContactArea","props","ContactData","mailchimp","cta","ctaBg","image","childImageSharp","fluid","sectionTitleStyle","textStyle","ctaHeading","ctaText","ctaBtn","Container","Row","Col","lg","title","desc","size","offset","className","parse","path","to","icon","defaultProps","mb","fontSize","fontWeight","as","lineHeight","letterSpacing","maxWidth","pb","colors","shape","btnsize","module","exports","SectionTitleWrap","space","layout","SectionTitle","subtitle","align","BlogWrapper","article","BlogInner","BlogMedia","BlogContent","BlogHeader","header","BlogTitle","h3","BlogMetaWrap","BlogExcerpt","p","BlogFooter","footer","Blog","video_id","video_channel","content","restProps","slug","dateSlug","category","date","format","excerpt","postID","video_link","quote_text","quote_author","link","images","btnStyle","categoryStyle","restStyles","split","videoOpen","setVideoOpen","poster","text","author","slugify","id","channel","videoId","isOpen","onClose","HeroWrapper","xsmall","xlarge","BannerShape","HeroBG","HeroTextBox","HeroArea","homeJson","headingStyle","textHeadingStyle","textTransform","fontFamily","PaginationWrap","PaginationList","ul","PaginationItem","li","disabled","css","PaginationLink","Anchor","active","Pagination","currentPage","numberOfPages","rootPage","isFirst","isLast","previousPage","toString","nextPage","Array","from","length","_","i","key","BlogMeta","BlogMetaItem","FeaturePostWrapper","FeaturePostArea","blogs","allMarkdownRemark","edges","sliderSettings","sliderStyle","settings","map","blog","fields","frontmatter","truncateString","slidesPerView","spaceBetween","arrows","customArrows","breakpoints","1200","768","320","navStyle","SidebarWrap","aside","WidgetBoxWrap","Sidebar"],"mappings":"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","file":"805e9f652caf30deb721db5cfed088a936e2b561-7c6cda4df8a59b1e7944.js","sourcesContent":["import styled from 'styled-components'\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const MailchimpWrap = styled.div `\r\n    position: relative;\r\n    input{\r\n        font-size: 16px;\r\n        height: 50px;\r\n        color: ${themeGet('headingColor')};\r\n        border: 0px;\r\n        border-bottom-width: 2px;\r\n        border-bottom-color: ${themeGet('headingColor')};\r\n        border-style: solid;\r\n        padding-left: 0;\r\n        padding-bottom: 22px;\r\n        &:placeholder {\r\n            color: ${themeGet('headingColor')};\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SubmitBtn = styled.div `\r\n    position: absolute;\r\n    right: 0;\r\n    top: 0;\r\n`;","import React, {useState} from 'react'\r\nimport { FiArrowRight } from \"react-icons/fi\";\r\nimport Button from '../../../shared/button'\r\nimport {MailchimpWrap, SubmitBtn} from './mailchimp.stc'\r\n\r\nconst Mailchimp = ({ status = undefined, message, onValidated }) => {\r\n    const [error, setError] = useState(false)\r\n    let email;\r\n    const submit = () => {\r\n      const isValidate = validateEmail(email.value);\r\n      setError(!isValidate)\r\n      if(isValidate){\r\n        return (\r\n          email &&\r\n          email.value.indexOf(\"@\") > -1 &&\r\n          onValidated({\r\n            EMAIL: email.value\r\n          })\r\n        )\r\n      }\r\n    }\r\n\r\n    function validateEmail(email){\r\n      return /\\S+@\\S+\\.\\S+/.test(email)\r\n    }\r\n\r\n    return (\r\n      <MailchimpWrap>\r\n        <input\r\n          ref={node => (email = node)}\r\n          type=\"email\"\r\n          placeholder=\"Your email\"\r\n        />\r\n        <SubmitBtn>\r\n            <Button onClick={submit} varient=\"iconButton\"><FiArrowRight/></Button>\r\n        </SubmitBtn>\r\n        {(status === \"sending\" && !error) && <div style={{ color: \"blue\" }}>sending...</div>}\r\n        {(status === \"error\" && !error) && (\r\n          <div\r\n            style={{ color: \"red\" }}\r\n            dangerouslySetInnerHTML={{ __html: message }}\r\n          />\r\n        )}\r\n        {(error && !status) && <div style={{color: 'red'}}>Please, Write a valid email</div>}\r\n        {(status === \"success\" && !error) && (\r\n          <div\r\n            style={{ color: \"green\" }}\r\n            dangerouslySetInnerHTML={{ __html: message }}\r\n          />\r\n        )}\r\n      </MailchimpWrap>\r\n    );\r\n};\r\n\r\nexport default Mailchimp","import React, {Fragment} from 'react'\r\nimport SubscribeFrom from \"react-mailchimp-subscribe\";\r\nimport {useStaticQuery, graphql} from 'gatsby'\r\nimport MailchimpForm from './form'\r\n\r\nconst Mailchimp = () => {\r\n    const mailchimpData = useStaticQuery(graphql `\r\n        query MailchimpQuery {\r\n            site {\r\n                siteMetadata {\r\n                    mailchimp_endpoint\r\n                }\r\n            }\r\n        }      \r\n    `)\r\n    const url = mailchimpData.site.siteMetadata.mailchimp_endpoint;\r\n    return (\r\n        <Fragment>\r\n            <SubscribeFrom\r\n                url={url}\r\n                render={({ subscribe, status, message }) => (\r\n                    <MailchimpForm\r\n                        status={status}\r\n                        message={message}\r\n                        onValidated={formData => subscribe(formData)}\r\n                    />\r\n            )}/>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Mailchimp\r\n","import styled from \"styled-components\";\r\nimport BackgroundImage from 'gatsby-background-image'\r\nimport { themeGet } from '@styled-system/theme-get';\r\nimport { device } from '../../../theme'\r\n\r\nexport const ContactWrapper = styled.section`\r\n    padding-bottom: 60px;\r\n    ${device.small}{\r\n        padding-bottom: 80px;\r\n    }\r\n    ${device.medium}{\r\n        padding-bottom: 100px;\r\n    }\r\n`;\r\n\r\nexport const MailChimpText = styled.div`\r\n    margin-bottom: 36px;\r\n    ${device.small}{\r\n        margin-bottom: 46px;\r\n    }\r\n    ${device.medium}{\r\n        margin-bottom: 69px;\r\n        padding-top: 22px;\r\n    }\r\n`;\r\n\r\n\r\nexport const CtaWrapper = styled.div`\r\n    position: relative;\r\n    margin-top: 60px;\r\n    ${device.medium}{\r\n        margin-top: 0;\r\n    }\r\n    &:after{\r\n        position: absolute;\r\n        content: \"\";\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        z-index: 1;\r\n        border-radius: 6px;\r\n        background-image: -moz-linear-gradient( 45deg, rgb(248,119,124) 0%, rgba(248,119,124,0) 100%);\r\n        background-image: -webkit-linear-gradient( 45deg, rgb(248,119,124) 0%, rgba(248,119,124,0) 100%);\r\n        background-image: -ms-linear-gradient( 45deg, rgb(248,119,124) 0%, rgba(248,119,124,0) 100%);\r\n    }\r\n`;\r\n\r\nexport const CtaBG = styled(BackgroundImage)`\r\n    position: absolute !important;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    &:before,\r\n    &:after{\r\n        border-radius: 6px;\r\n    }\r\n`;\r\n\r\nexport const CtaContent = styled.div`\r\n    position: relative;\r\n    z-index: 2;\r\n    color: #fff;\r\n    padding-left: 30px;\r\n    padding-top: 50px;\r\n    padding-bottom: 30px;\r\n    padding-right: 30px;\r\n    ${device.small}{\r\n        padding-left: 40px;\r\n        padding-top: 80px;\r\n        padding-bottom: 50px;\r\n    }\r\n    ${device.large}{\r\n        padding-left: 78px;\r\n        padding-top: 136px;\r\n        padding-bottom: 70px;\r\n    }\r\n    .cta-heading{\r\n        span{\r\n            display: block;\r\n            font-family: ${themeGet('fonts.marck')};\r\n            font-size: 50px;\r\n            margin-top: 13px;\r\n            ${device.small}{\r\n                font-size: 60px;\r\n            }\r\n        }\r\n    }\r\n`;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {useStaticQuery, graphql} from 'gatsby'\r\nimport {Container, Row, Col} from 'reactstrap'\r\nimport { FiChevronRight } from \"react-icons/fi\";\r\nimport parse from 'html-react-parser'\r\nimport SectionTitle from '../../../components/shared/section-title'\r\nimport Text from '../../../components/shared/text'\r\nimport Heading from '../../../components/shared/heading'\r\nimport Button from '../../../components/shared/button'\r\nimport Mailchimp from '../../../components/forms/mailchimp'\r\n\r\nimport {ContactWrapper, CtaWrapper, MailChimpText, CtaBG, CtaContent} from './contact-area.stc'\r\n\r\nconst ContactArea = (props) => {\r\n    const ContactData = useStaticQuery(graphql `\r\n        query ContactDataQuery {\r\n            mailchimp: homeJson(id: {eq: \"home-mailchimp-content\"}) {\r\n                title\r\n                desc\r\n            }\r\n            cta: homeJson(id: {eq: \"home-cta-content\"}) {\r\n                title\r\n                desc\r\n                path\r\n                image {\r\n                    childImageSharp {\r\n                        fluid(maxWidth: 723, maxHeight: 640, srcSetBreakpoints: 6, quality: 100) {\r\n                            ...GatsbyImageSharpFluid_withWebp\r\n                            presentationHeight\r\n                            presentationWidth\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }      \r\n    `);\r\n\r\n    const mailchimp = ContactData.mailchimp;\r\n    const cta = ContactData.cta;\r\n    const ctaBg = cta.image.childImageSharp.fluid;\r\n    const {sectionTitleStyle, textStyle, ctaHeading, ctaText, ctaBtn} = props;\r\n    return (\r\n        <ContactWrapper>\r\n            <Container>\r\n                <Row>\r\n                    <Col lg={4}>\r\n                        <MailChimpText>\r\n                            {mailchimp.title && <SectionTitle {...sectionTitleStyle} title={mailchimp.title}/>}\r\n                            {mailchimp.desc && <Text {...textStyle}>{mailchimp.desc}</Text>}\r\n                        </MailChimpText>\r\n                        <Mailchimp/>\r\n                    </Col>\r\n                    <Col lg={{size: 7, offset: 1}}>\r\n                        <CtaWrapper>\r\n                            <CtaBG fluid={ctaBg}/>\r\n                            <CtaContent>\r\n                                {cta.title && <Heading {...ctaHeading} className=\"cta-heading\">{parse(cta.title)}</Heading>}\r\n                                {cta.desc && <Text {...ctaText}>{cta.desc}</Text>}\r\n                                {cta.path && <Button {...ctaBtn} to={cta.path} icon={<FiChevronRight/>}>Connect With me</Button>}\r\n                            </CtaContent>\r\n                        </CtaWrapper>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </ContactWrapper>\r\n    )\r\n}\r\n\r\nContactArea.propTypes = {\r\n    sectionTitleStyle: PropTypes.object,\r\n    textStyle: PropTypes.object,\r\n}\r\n\r\nContactArea.defaultProps = {\r\n    sectionTitleStyle: {\r\n        mb: '31px'\r\n    },\r\n    textStyle: {\r\n        fontSize: '16px',\r\n        fontWeight: 300,\r\n        color: 'headingColor'\r\n    },\r\n    ctaHeading: {\r\n        as: 'h3',\r\n        color: '#fff',\r\n        fontSize: '24px',\r\n        lineHeight: 1,\r\n        letterSpacing: '3px',\r\n        fontWeight: 300,\r\n        mb: '30px'\r\n    },\r\n    ctaText: {\r\n        maxWidth: '365px',\r\n        fontSize: '16px',\r\n        fontWeight: 300,\r\n        pb: ['55px', '70px', null, null, null, '120px']\r\n    },\r\n    ctaBtn: {\r\n        colors: \"light\",\r\n        fontWeight: 500,\r\n        shape: 'rounded',\r\n        btnsize: 'large'\r\n    }\r\n}\r\n \r\nexport default ContactArea","module.exports = __webpack_public_path__ + \"static/home-one-banner-shape-08461777e8374814bd7ec0be76c93418.png\";","import styled from 'styled-components'\nimport { space, layout } from 'styled-system'\nimport { themeGet } from '@styled-system/theme-get';\n\nexport const SectionTitleWrap = styled.div `\n    ${space}\n    ${layout}\n    h3{\n        font-size: 24px;\n        text-transform: uppercase;\n        position: relative;\n        &:after{\n            position: absolute;\n            content: \"\";\n            left: 2px;\n            bottom: 4px;\n            width: 120px;\n            height: 20px;\n            z-index: -1;\n            background-color: ${themeGet(\"colors.themeColor\")};\n        }\n    }\n`;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {SectionTitleWrap} from './section-title.stc'\n\nconst SectionTitle = ({title, subtitle, ...props}) => {\n    return (\n        <SectionTitleWrap {...props}>\n            {title && <h3 dangerouslySetInnerHTML={{ __html: title}} />}\n            {subtitle && <h6>{subtitle}</h6>}\n        </SectionTitleWrap>\n    )\n}\n\nSectionTitle.propTypes = {\n    align: PropTypes.oneOf(['left', 'center', 'right']),\n    mb: PropTypes.string\n}\n\nSectionTitle.defaultProps = {\n    align: 'left'\n}\nexport default SectionTitle;","import styled from \"styled-components\";\r\nimport {space} from 'styled-system'\r\nimport {device} from '../../../theme'\r\n\r\nexport const BlogWrapper = styled.article `\r\n    ${space}\r\n`;\r\n\r\nexport const BlogInner = styled.div `\r\n    ${device.small}{\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n`;\r\n\r\nexport const BlogMedia = styled.div `\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n    ${device.small}{\r\n        flex-basis: 370px;\r\n        max-width: 370px;\r\n        margin-bottom: 0;\r\n    }\r\n    ${device.medium}{\r\n        flex-basis: 300px;\r\n        max-width: 300px;\r\n    }\r\n    ${device.large}{\r\n        flex-basis: 400px;\r\n        max-width: 400px;\r\n    }\r\n`;\r\n\r\nexport const BlogContent = styled.div `\r\n    align-self: center;\r\n    width: 100%;\r\n    ${device.small}{\r\n        flex-basis: calc(100% - 370px);\r\n        max-width: calc(100% - 370px);\r\n        padding-left: 30px;\r\n    }\r\n    ${device.medium}{\r\n        flex-basis: calc(100% - 300px);\r\n        max-width: calc(100% - 300px);\r\n    }\r\n    ${device.large}{\r\n        flex-basis: calc(100% - 400px);\r\n        max-width: calc(100% - 400px);\r\n    }\r\n`;\r\n\r\nexport const BlogHeader = styled.header ``;\r\n\r\nexport const BlogTitle = styled.h3 `\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    margin-bottom: 4px;\r\n    a{\r\n        color: #0e1b47;\r\n    }\r\n`;\r\n\r\nexport const BlogMetaWrap = styled.div `\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const BlogExcerpt = styled.p `\r\n    margin-bottom: 18px;\r\n`;\r\n\r\nexport const BlogFooter = styled.footer ``;","import React, {Fragment, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'gatsby'\r\nimport { FiChevronRight } from \"react-icons/fi\";\r\nimport Button from '../../shared/button'\r\nimport {slugify} from '../../../utils/utilFunctions'\r\nimport BlogMeta, {Category, CommentNumber} from '../../blog/blog-meta'\r\nimport ModalVideo from '../../shared/modal-video'\r\nimport {Thumbnail, Video, Quote, Linked, Gallery} from '../blog-media'\r\nimport {\r\n    BlogWrapper,\r\n    BlogInner,\r\n    BlogMedia,\r\n    BlogContent,\r\n    BlogHeader,\r\n    BlogTitle,\r\n    BlogMetaWrap,\r\n    BlogExcerpt,\r\n    BlogFooter\r\n} from './blog.stc'\r\n  \r\nconst Blog = ({content, ...restProps}) => {\r\n    const {\r\n        slug, dateSlug, category, date, format, title, image, \r\n        excerpt, postID, video_link, quote_text, quote_author,\r\n        link, images\r\n    } = content;\r\n    const {btnStyle, categoryStyle, ...restStyles} = restProps;\r\n    let video_arr, video_id, video_channel;\r\n    if(video_link){\r\n        video_arr = video_link.split('=', -1);\r\n        video_id = video_arr[1];\r\n        video_channel = video_link.split(\".\")[1];\r\n    }\r\n    const [videoOpen, setVideoOpen] = useState(false);\r\n    const modalVideoOpen = () => {\r\n        setVideoOpen(true)\r\n    }\r\n    const modalVideoClose = () => {\r\n        setVideoOpen(false)\r\n    }\r\n     \r\n    return (\r\n        <Fragment>\r\n            <BlogWrapper {...restStyles}>\r\n                <BlogInner>\r\n                    <BlogMedia>\r\n                        {(format === 'image' || format === 'standard') && (\r\n                            <Thumbnail path={`/${slug}`} image={image} title={title}/>\r\n                        )}\r\n                        {format === 'video' && (\r\n                            <Video\r\n                                onClick={modalVideoOpen}\r\n                                poster={image.childImageSharp.fluid}\r\n                                title={title}\r\n                            />\r\n                        )}\r\n                        {format === 'quote' && <Quote text={quote_text} author={quote_author}/>}\r\n                        {format === 'link' && <Linked link={link}/>}\r\n                        {format === 'gallery' && <Gallery images={images}/>}\r\n                    </BlogMedia>\r\n                    <BlogContent>\r\n                        <BlogHeader> \r\n                            {category && <Category {...categoryStyle} slug={`/category/${slugify(category)}`} text={category}/>}\r\n                            {title && <BlogTitle><Link to={`/${slug}`}>{title}</Link></BlogTitle>}\r\n                            <BlogMetaWrap>\r\n                                {date && (\r\n                                    <BlogMeta>\r\n                                        <Link to={`/date/${slugify(dateSlug)}`}>{date}</Link>\r\n                                    </BlogMeta>\r\n                                )}\r\n                                <BlogMeta>\r\n                                    <CommentNumber slug={slug} title={title} id={postID}/>\r\n                                </BlogMeta>\r\n                            </BlogMetaWrap>\r\n                        </BlogHeader>\r\n                        {excerpt && <BlogExcerpt>{excerpt}</BlogExcerpt>}\r\n                        <BlogFooter>\r\n                            <Button {...btnStyle} icon={<FiChevronRight/>} to={`/${slug}`}>Read More</Button>\r\n                        </BlogFooter>\r\n                    </BlogContent>\r\n                </BlogInner>\r\n            </BlogWrapper>\r\n            <ModalVideo\r\n                channel={video_channel}\r\n                videoId={video_id}\r\n                isOpen={videoOpen}\r\n                onClose={modalVideoClose}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nBlog.propTypes = {\r\n    btnStyle: PropTypes.object\r\n}\r\n \r\nBlog.defaultProps = {\r\n    btnStyle: {\r\n        varient: \"texted\"\r\n    },\r\n    categoryStyle: {\r\n        mb: '7px'\r\n    }\r\n}\r\n\r\nexport default Blog\r\n","import styled from 'styled-components';\r\nimport BackgroundImage from 'gatsby-background-image'\r\nimport BannerShape from '../../../assets/img/home-one-banner-shape.png'\r\nimport {device} from '../../../theme'\r\n\r\nexport const HeroWrapper = styled.section `\r\n    height: 500px;\r\n    position: relative;\r\n    ${device.xsmall}{\r\n        height: 650px;\r\n    }\r\n    ${device.medium}{\r\n        height: 750px;\r\n    }\r\n    ${device.large}{\r\n        height: 850px;\r\n    }\r\n    ${device.xlarge}{\r\n        height: 1080px;\r\n    }\r\n    &:before{\r\n        position: absolute;\r\n        content: '';\r\n        left: 0;\r\n        top: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        z-index: 1;\r\n        background-color: rgb( 0, 0, 0, .2 );\r\n    }\r\n    &:after{\r\n        position: absolute;\r\n        content: '';\r\n        left: 0;\r\n        bottom: -5px;\r\n        z-index: 1;\r\n        width: 100%;\r\n        height: 100px;\r\n        background: url(${BannerShape}) no-repeat scroll 0 0;\r\n        background-size: 100% 100%;\r\n        ${device.xsmall}{\r\n            height: 160px;\r\n        }\r\n        ${device.small}{\r\n            height: 200px;\r\n        }\r\n        ${device.medium}{\r\n            height: 240px;\r\n        }\r\n        ${device.large}{\r\n            height: 280px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const HeroBG = styled(BackgroundImage) `\r\n    position: absolute !important;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n\r\nexport const HeroTextBox = styled.div `\r\n    padding-top: 200px;\r\n    ${device.xsmall}{\r\n        padding-top: 210px;\r\n    }\r\n    ${device.medium}{\r\n        padding-top: 230px;\r\n    }\r\n    ${device.large}{\r\n        padding-top: 268px;\r\n    }\r\n    * {\r\n        position: relative;\r\n        z-index: 9;\r\n    }\r\n`; ","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport Heading from '../../../components/shared/heading'\r\nimport Text from '../../../components/shared/text'\r\nimport { HeroWrapper, HeroBG, HeroTextBox } from './hero-area.stc'\r\n\r\nconst HeroArea = (props) => {\r\n    const heroData = useStaticQuery(graphql`\r\n        query HomeHeroQuery {\r\n            homeJson(id: {eq: \"home-hero-content\"}){\r\n                title\r\n                desc\r\n                image {\r\n                    childImageSharp {\r\n                        fluid(maxWidth: 1920, maxHeight: 1266, quality: 100) {\r\n                            ...GatsbyImageSharpFluid_withWebp\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }      \r\n    `)\r\n    const { title, desc, image } = heroData.homeJson;\r\n    const { headingStyle, textStyle, textHeadingStyle } = props;\r\n    return (\r\n        <HeroWrapper>\r\n            <HeroBG fluid={image.childImageSharp.fluid} />\r\n            <Container>\r\n                <Row>\r\n                    <Col lg={6}>\r\n                        <HeroTextBox>\r\n                            {title && <Heading {...textHeadingStyle} {...headingStyle}>{title}</Heading>}\r\n                            {desc && <Text {...textHeadingStyle} {...textStyle}>{desc}</Text>}\r\n                        </HeroTextBox>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </HeroWrapper>\r\n    )\r\n}\r\n\r\nHeroArea.propTypes = {\r\n    headingStyle: PropTypes.object,\r\n    textStyle: PropTypes.object,\r\n    textHeadingStyle: PropTypes.object\r\n}\r\n\r\nHeroArea.defaultProps = {\r\n    headingStyle: {\r\n        as: 'h1',\r\n        fontSize: ['70px', null, '90px', '110px', '120px', '150px'],\r\n        textTransform: 'capitalize',\r\n        fontFamily: 'marck',\r\n        mb: ['10px', null, 0]\r\n    },\r\n    textStyle: {\r\n        fontSize: ['35px', '48px'],\r\n        fontFamily: 'segoe',\r\n    },\r\n    textHeadingStyle: {\r\n        color: '#fff',\r\n        lineHeight: 1,\r\n        fontWeight: 'regular'\r\n    }\r\n}\r\n\r\nexport default HeroArea\r\n","import styled, { css } from 'styled-components';\r\nimport Anchor from '../shared/anchor'\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const PaginationWrap = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nexport const PaginationList = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    display: flex;\r\n`;\r\n\r\nexport const PaginationItem = styled.li`\r\n    &:not(:last-child){\r\n        margin-right: 8px;\r\n    }\r\n    ${props => props.disabled && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const PaginationLink = styled(Anchor)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-width: 50px;\r\n    min-height: 48px;\r\n    line-height: 48px;\r\n    border-radius: 3px;\r\n    border: 1px solid ${themeGet('colors.borderColor')};\r\n    color: ${themeGet('colors.silver')};\r\n    text-align: center;\r\n    font-size: ${themeGet('fontSize.text')};\r\n    font-weight: ${themeGet('fontWeights.medium')};\r\n    &:hover{\r\n        color: ${themeGet('colors.hoverColor')};\r\n        border-color: ${themeGet('colors.hoverColor')};\r\n    }\r\n    ${props => props.active && css`\r\n        color: ${themeGet('colors.headingColor')};\r\n        border-color: ${themeGet('colors.hoverColor')};\r\n        background-color: ${themeGet('colors.hoverColor')};\r\n        &:hover{\r\n            color: ${themeGet('colors.headingColor')};\r\n            border-color: ${themeGet('colors.hoverColor')};\r\n        }\r\n    `}\r\n    &.prev,\r\n    &.next{\r\n        padding: 0 20px;\r\n    }\r\n    svg{\r\n        width: 18px;\r\n        height: 18px;\r\n    }\r\n`;","import React from 'react';\r\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\r\nimport { PaginationWrap, PaginationList, PaginationItem, PaginationLink } from './pagination.stc'\r\n\r\nconst Pagination = ({ currentPage, numberOfPages, rootPage }) => {\r\n    const isFirst = currentPage === 1;\r\n    const isLast = currentPage === numberOfPages;\r\n    const previousPage = currentPage - 1 === 1 ? rootPage : '/page/' + (currentPage - 1).toString();\r\n    const nextPage = '/page/' + (currentPage + 1).toString();\r\n    return (\r\n        <PaginationWrap>\r\n            <PaginationList>\r\n                {isFirst ? (\r\n                    <PaginationItem disabled={true}>\r\n                        <PaginationLink className=\"prev\" path={previousPage}>\r\n                            <FiChevronLeft />\r\n                            <span>Prev</span>\r\n                        </PaginationLink>\r\n                    </PaginationItem>\r\n                ) : (\r\n                        <PaginationItem>\r\n                            <PaginationLink className=\"prev\" path={previousPage}>\r\n                                <FiChevronLeft />\r\n                                <span>Prev</span>\r\n                            </PaginationLink>\r\n                        </PaginationItem>\r\n                    )}\r\n                {Array.from({ length: numberOfPages }, (_, i) => currentPage === i + 1 ? (\r\n                    <PaginationItem key={`page-number-${i + 1}`} id={`page-number-${i + 1}`}>\r\n                        <PaginationLink active=\"true\" path={`${i === 0 ? '' : '/page/' + (i + 1)}`}>\r\n                            {i + 1}\r\n                        </PaginationLink>\r\n                    </PaginationItem>\r\n                ) : (\r\n                        <PaginationItem key={`page-number-${i + 1}`} id={`page-number-${i + 1}`}>\r\n                            <PaginationLink path={`${i === 0 ? rootPage : '/page/' + (i + 1)}`}>\r\n                                {i + 1}\r\n                            </PaginationLink>\r\n                        </PaginationItem>\r\n                    ))}\r\n                {isLast ? (\r\n                    <PaginationItem disabled={true}>\r\n                        <PaginationLink className=\"next\" path={nextPage}>\r\n                            <span>Next</span>\r\n                            <FiChevronRight />\r\n                        </PaginationLink>\r\n                    </PaginationItem>\r\n                ) : (\r\n                        <PaginationItem>\r\n                            <PaginationLink className=\"next\" path={nextPage}>\r\n                                <span>Next</span>\r\n                                <FiChevronRight />\r\n                            </PaginationLink>\r\n                        </PaginationItem>\r\n                    )}\r\n            </PaginationList>\r\n        </PaginationWrap>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import styled from 'styled-components'\r\nimport Anchor from '../../shared/anchor'\r\nimport { themeGet } from '@styled-system/theme-get';\r\nimport { device } from '../../../theme'\r\n\r\nexport const BlogWrapper = styled.article`\r\n\r\n`;\r\n\r\nexport const BlogInner = styled.div``;\r\n\r\nexport const BlogMedia = styled.div``;\r\n\r\nexport const BlogContent = styled.div`\r\n    text-align: center;\r\n    margin-top: 15px;\r\n`;\r\n\r\nexport const BlogTitle = styled.h3`\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    text-transform: capitalize;\r\n    margin-bottom: 2px;\r\n    ${device.small}{\r\n        font-size: 16px;\r\n    }\r\n    a{\r\n        color: ${themeGet(\"colors.headingColor\")}\r\n    }\r\n`;\r\n\r\nexport const BlogMeta = styled.div``;\r\n\r\nexport const BlogMetaItem = styled(Anchor)`\r\n    color: ${themeGet(\"colors.headingColor\")};\r\n    text-transform: uppercase;\r\n    font-weight: 300;\r\n    font-size: 12px;\r\n`;\r\n","import React, {Fragment, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Anchor from '../../shared/anchor'\r\nimport ModalVideo from '../../shared/modal-video'\r\nimport {Thumbnail, Video, Quote, Linked, Gallery} from '../blog-media'\r\nimport {\r\n    BlogWrapper,\r\n    BlogInner, \r\n    BlogMedia,\r\n    BlogContent,\r\n    BlogTitle,\r\n    BlogMeta,\r\n    BlogMetaItem\r\n} from './blog.stc'\r\n\r\nconst Blog = ({content, ...restProps}) => {\r\n    const {\r\n        slug, dateSlug, date, format, title, image, \r\n        video_link, quote_text, quote_author,\r\n        link, images\r\n    } = content;\r\n    let video_arr, video_id, video_channel;\r\n    if(video_link){\r\n        video_arr = video_link.split('=', -1);\r\n        video_id = video_arr[1];\r\n        video_channel = video_link.split(\".\")[1];\r\n    }\r\n    const [videoOpen, setVideoOpen] = useState(false);\r\n    const modalVideoOpen = () => {\r\n        setVideoOpen(true)\r\n    }\r\n    const modalVideoClose = () => {\r\n        setVideoOpen(false)\r\n    }\r\n\r\n    return (\r\n        <Fragment>\r\n            <BlogWrapper>\r\n                <BlogInner>\r\n                    <BlogMedia>\r\n                        {(format === 'image' || format === 'standard') && (\r\n                            <Thumbnail path={`/${slug}`} image={image} title={title}/>\r\n                        )}\r\n                        {format === 'video' && (\r\n                            <Video\r\n                                onClick={modalVideoOpen}\r\n                                poster={image.childImageSharp.fluid}\r\n                                title={title}\r\n                            />\r\n                        )}\r\n                        {format === 'quote' && <Quote text={quote_text} author={quote_author}/>}\r\n                        {format === 'link' && <Linked link={link}/>}\r\n                        {format === 'gallery' && <Gallery images={images}/>}\r\n                    </BlogMedia>\r\n                    <BlogContent>\r\n                        {title && <BlogTitle><Anchor path={`/${slug}`}>{title}</Anchor></BlogTitle>}\r\n                        <BlogMeta>\r\n                            {date && <BlogMetaItem path={`/date/${dateSlug}`}>{date}</BlogMetaItem>}\r\n                        </BlogMeta>\r\n                    </BlogContent>\r\n                </BlogInner>\r\n            </BlogWrapper>\r\n            <ModalVideo\r\n                channel={video_channel}\r\n                videoId={video_id}\r\n                isOpen={videoOpen}\r\n                onClose={modalVideoClose}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nBlog.propTypes = {\r\n    image: PropTypes.object,\r\n    title: PropTypes.string,\r\n    date: PropTypes.string\r\n}\r\n\r\nexport default Blog\r\n","import styled from \"styled-components\";\r\nimport {themeGet} from '@styled-system/theme-get'\r\nimport {device} from '../../../theme'\r\n \r\nexport const FeaturePostWrapper = styled.div `\r\n    padding-top: 26px;\r\n    padding-bottom: 50px;\r\n    .feature-post-slider{\r\n        padding-bottom: 45px;\r\n        border-bottom: 1px solid ${themeGet(\"colors.borderColor\")};\r\n    }\r\n    ${device.small}{\r\n        padding-top: 0;\r\n        margin-top: -8px;\r\n    }\r\n    ${device.medium}{\r\n        margin-top: -250px;\r\n    }\r\n    ${device.large}{\r\n        margin-top: -300px;\r\n    }\r\n    ${device.xlarge}{\r\n        margin-top: -445px;\r\n    }\r\n`;","import React from 'react'\r\nimport {Container, Row, Col} from 'reactstrap'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport Blog from '../../../components/blog/layout-one'\r\nimport Swiper from '../../../components/shared/swiper'\r\nimport {truncateString} from '../../../utils/utilFunctions'\r\nimport {FeaturePostWrapper} from './feature-post-area.stc'\r\n\r\nconst FeaturePostArea = (props) => {\r\n    const featurePostData = useStaticQuery(graphql `\r\n        query FeaturePostQuery {\r\n            allMarkdownRemark(\r\n                filter: {frontmatter: {is_featured: {eq: true}, format: {eq: \"image\"}}}, \r\n                sort: {order: DESC, fields: frontmatter___date}) {\r\n                edges {\r\n                    node {\r\n                        fields {\r\n                            slug\r\n                            dateSlug\r\n                        }\r\n                        frontmatter {\r\n                            title\r\n                            format\r\n                            date(formatString: \"LL\")\r\n                            image {\r\n                                childImageSharp {\r\n                                    fluid(maxWidth: 450, maxHeight: 500, quality: 100) {\r\n                                        ...GatsbyImageSharpFluid_withWebp\r\n                                        presentationWidth\r\n                                        presentationHeight\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const blogs = featurePostData.allMarkdownRemark.edges;\r\n    const {sliderSettings, sliderStyle} = props\r\n    return (\r\n        <FeaturePostWrapper id=\"feature-post\">\r\n            <Container>\r\n                <Row>\r\n                    <Col lg={12}>\r\n                        <div className=\"feature-post-slider\">\r\n                            <Swiper settings={sliderSettings} {...sliderStyle}>\r\n                                {blogs.map(blog => (\r\n                                    <div className=\"item\" key={blog.node.fields.slug}>\r\n                                        <Blog\r\n                                            content={{\r\n                                                ...blog.node.fields, \r\n                                                ...blog.node.frontmatter,\r\n                                                title: truncateString(blog.node.frontmatter.title, 35)\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                ))}\r\n                            </Swiper>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </FeaturePostWrapper>\r\n    )\r\n}\r\n\r\nFeaturePostArea.defaultProps = {\r\n    sliderSettings: {\r\n        slidesPerView: 1,\r\n        spaceBetween: 30,\r\n        arrows: false,\r\n        customArrows: true,\r\n        breakpoints: {\r\n            1200: {\r\n                slidesPerView: 3,\r\n            },\r\n            768: {\r\n                slidesPerView: 2,\r\n            },\r\n            320: {\r\n                slidesPerView: 1\r\n            }\r\n        }\r\n    },\r\n    sliderStyle: {\r\n        navStyle: 2\r\n    }\r\n}\r\n\r\nexport default FeaturePostArea\r\n","import styled from \"styled-components\";\r\nimport { WidgetBoxWrap } from '../../../components/shared/widget-box/widget-box.stc'\r\nimport { device } from '../../../theme'\r\n\r\nexport const SidebarWrap = styled.aside`\r\n    ${device.medium}{\r\n        margin-top: 12px;\r\n    }\r\n    ${WidgetBoxWrap}{\r\n        &:not(:last-child){\r\n            margin-bottom: 30px;\r\n        }\r\n    }\r\n`; ","import React from 'react'\r\nimport SearchWidget from '../../widgets/search'\r\nimport RecentPostWidget from '../../widgets/recent-post'\r\nimport CategoriesWidget from '../../widgets/categories'\r\nimport {SidebarWrap} from './sidebar.stc'\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <SidebarWrap>\r\n            <SearchWidget/>\r\n            <RecentPostWidget/>\r\n            <CategoriesWidget/>\r\n        </SidebarWrap>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n "],"sourceRoot":""}