{"version":3,"sources":["webpack:///./src/assets/img/icons/quote-icon.png","webpack:///./src/containers/widgets/author/author.stc.js","webpack:///./src/containers/widgets/author/index.js","webpack:///./src/containers/global/comment/commenct.stc.js","webpack:///./src/containers/global/comment/index.js","webpack:///./src/components/blog/layout-four/blog.stc.js","webpack:///./src/components/blog/layout-four/index.js","webpack:///./src/containers/global/related-posts/SimilarArticlesFactory.js","webpack:///./src/containers/global/related-posts/related-posts.stc.js","webpack:///./src/containers/global/related-posts/index.js","webpack:///./src/components/socials/social-share/index.js","webpack:///./src/templates/single-blog/single-blog.stc.js","webpack:///./src/templates/single-blog/single-blog.js","webpack:///(webpack)/buildin/module.js"],"names":["module","exports","AuthorWrap","styled","div","AuthorImg","figure","AuthorName","h5","AuthorTagline","p","Author","content","widgetStyle","socialCSS","author","name","image","tagline","social","fixed","childImageSharp","alt","defaultProps","textAlign","color","borderColor","CommentWrap","themeGet","Comment","slug","title","id","site","siteMetadata","disqusShortname","disqus_shortname","disqusConfig","url","siteUrl","identifier","shortname","config","BlogWrapper","article","space","BlogInner","BlogMedia","BlogCategory","Link","BlogContent","BlogTitle","h3","BlogExcerpt","Blog","video_id","video_channel","restProps","excerpt","category","format","video_link","quote_text","quote_author","link","images","split","useState","videoOpen","setVideoOpen","path","onClick","poster","fluid","text","to","slugify","channel","videoId","isOpen","onClose","SimilarArticlesFactory","articles","currentArticleSlug","this","filter","aArticle","maxArticles","tags","setMaxArticles","m","setCategory","aCategory","setTags","tagsArray","getArticles","identityMap","length","console","error","getSlug","addToMap","hasOwnProperty","points","addCategoryPoints","addTagsPoints","forEach","aTag","includes","arrayIdentityMap","Object","keys","map","orderBy","splice","RelatedPostsWrap","device","medium","RelatedPosts","props","posts","getPostsFromQuery","similarArticles","headingCSS","blogCSS","Row","Col","data","i","md","key","as","fontSize","fontWeight","mb","SocialShare","mr","width","height","lineHeight","borderWidth","layout","SinglePostArea","section","small","SinglePostWrap","quoteIcon","PostMedia","PostHeader","header","PostTitle","h2","PostMeta","PostFooter","footer","PostShare","PostTags","SidebarWrap","aside","WidgetBoxWrap","postQuery","SingleBlog","pageContext","location","markdownRemark","fields","dateSlug","postID","authorId","frontmatter","date","html","className","Container","lg","dangerouslySetInnerHTML","__html","webpackPolyfill","deprecate","paths","children","defineProperty","enumerable","get","l"],"mappings":"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","file":"component---src-templates-single-blog-single-blog-js-6e3f6fd11ffaf888dc6b.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/quote-icon-c0db7eb24cddd14bc4da5a5e39a2360a.png\";","import styled from 'styled-components'\r\n\r\nexport const AuthorWrap = styled.div ``;\r\n\r\nexport const AuthorImg = styled.figure `\r\n    margin-bottom: 19px;\r\n    img{\r\n        border-radius: 50%;\r\n    }\r\n`;\r\n\r\nexport const AuthorName = styled.h5 `\r\n    font-size: 12px;\r\n    margin-bottom: 8px;\r\n`;\r\n\r\nexport const AuthorTagline = styled.p `\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    margin-bottom: 16px\r\n`;","import React from 'react'\r\nimport Img from 'gatsby-image'\r\nimport WidgetBox, { WidgetTitle } from '../../../components/shared/widget-box'\r\nimport Social from '../../../components/socials/layout-two'\r\nimport { AuthorWrap, AuthorImg, AuthorName, AuthorTagline } from './author.stc'\r\n\r\nconst Author = ({ content, widgetStyle, socialCSS }) => {\r\n    const author = content || {};\r\n    const { name, image, tagline, social } = author;\r\n\r\n    return (\r\n        <WidgetBox {...widgetStyle}>\r\n            <WidgetTitle>About Me</WidgetTitle>\r\n            <AuthorWrap>\r\n                {image && (\r\n                    <AuthorImg>\r\n                        <Img fixed={image.childImageSharp.fixed} alt={name || 'Author Name'} />\r\n                    </AuthorImg>\r\n                )}\r\n                {name && <AuthorName>{name}</AuthorName>}\r\n                {tagline && <AuthorTagline>{tagline}</AuthorTagline>}\r\n                {social && <Social {...socialCSS} social={social} />}\r\n            </AuthorWrap>\r\n        </WidgetBox>\r\n    )\r\n}\r\n\r\nAuthor.defaultProps = {\r\n    widgetStyle: {\r\n        textAlign: 'center'\r\n    },\r\n    socialCSS: {\r\n        color: 'shark',\r\n        borderColor: 'shark'\r\n    }\r\n}\r\n\r\nexport default Author\r\n\r\n","import styled from \"styled-components\";\r\nimport { themeGet } from '@styled-system/theme-get'\r\n\r\nexport const CommentWrap = styled.div`\r\n    border-bottom: 1px solid ${themeGet(\"colors.borderColor\")};\r\n    padding-top: 45px;\r\n    padding-bottom: 39px;\r\n    margin-bottom: 45px;\r\n`;\r\n","import React from 'react'\r\nimport { DiscussionEmbed } from 'disqus-react';\r\nimport {useStaticQuery, graphql} from 'gatsby'\r\nimport {CommentWrap} from './commenct.stc'\r\n\r\nconst Comment = ({slug, title, id}) => {\r\n    const siteData = useStaticQuery(graphql `\r\n        query CommentSiteQuery {\r\n            site {\r\n                siteMetadata {\r\n                    siteUrl\r\n                    disqus_shortname\r\n                }\r\n            }\r\n        }\r\n    `);\r\n    const {disqus_shortname, siteUrl} = siteData.site.siteMetadata;\r\n    const disqusShortname = disqus_shortname;\r\n    const disqusConfig = {\r\n        url: `${siteUrl}/${slug}`,\r\n        identifier: id,\r\n        title: title,\r\n    };\r\n    return (\r\n        <CommentWrap>\r\n            <DiscussionEmbed shortname={disqusShortname} config={disqusConfig} />\r\n        </CommentWrap>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","import styled from 'styled-components'\r\nimport {Link} from 'gatsby'\r\nimport {space} from 'styled-system'\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const BlogWrapper = styled.article `\r\n    ${space}\r\n`;  \r\n\r\nexport const BlogInner = styled.div ``;\r\n\r\nexport const BlogMedia = styled.div `\r\n    position: relative;\r\n`;\r\n\r\nexport const BlogThumb = styled.div `\r\n    img{\r\n        border-radius: 5px;\r\n    }\r\n`;\r\n\r\nexport const BlogCategory = styled(Link) `\r\n    position: absolute;\r\n    left: 25px;\r\n    top: 25px;\r\n    display: inline-block;\r\n    color: #fff;\r\n    text-transform: capitalize;\r\n    border: 2px solid #fff;\r\n    height: 30px;\r\n    min-width: 104px;\r\n    border-radius: 35px;\r\n    line-height: 26px;\r\n    text-align: center;\r\n    font-size: 12px;\r\n    z-index: 9;\r\n    &:hover{\r\n        color: #fff;\r\n    }\r\n`;\r\n\r\nexport const BlogContent = styled.div `\r\n    margin-top: 15px;\r\n`;\r\n\r\nexport const BlogTitle = styled.h3 `\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    text-transform: capitalize;\r\n    margin-bottom: 10px;\r\n    a{\r\n        color: ${themeGet(\"colors.headingColor\")}\r\n    }\r\n`;\r\n\r\nexport const BlogExcerpt = styled.p ``;\r\n","import React, {Fragment, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Anchor from '../../shared/anchor'\r\nimport {slugify} from '../../../utils/utilFunctions'\r\nimport ModalVideo from '../../shared/modal-video'\r\nimport {Thumbnail, Video, Quote, Linked, Gallery} from '../blog-media'\r\nimport {\r\n    BlogWrapper,\r\n    BlogInner, \r\n    BlogMedia,\r\n    BlogCategory,\r\n    BlogContent,\r\n    BlogTitle,\r\n    BlogExcerpt\r\n} from './blog.stc'\r\n\r\nconst Blog = ({content, ...restProps}) => {\r\n    const {\r\n        slug, excerpt, category, format, title, image,\r\n        video_link, quote_text, quote_author,\r\n        link, images\r\n    } = content;\r\n    let video_arr, video_id, video_channel;\r\n    if(video_link){\r\n        video_arr = video_link.split('=', -1);\r\n        video_id = video_arr[1];\r\n        video_channel = video_link.split(\".\")[1];\r\n    }\r\n    const [videoOpen, setVideoOpen] = useState(false);\r\n    const modalVideoOpen = () => {\r\n        setVideoOpen(true)\r\n    }\r\n    const modalVideoClose = () => {\r\n        setVideoOpen(false)\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n            <BlogWrapper {...restProps}>\r\n                <BlogInner>\r\n                    <BlogMedia>\r\n                        {(format === 'image' || format === 'standard') && (\r\n                            <Thumbnail path={`/${slug}`} image={image} title={title}/>\r\n                        )}\r\n                        {format === 'video' && (\r\n                            <Video\r\n                                onClick={modalVideoOpen}\r\n                                poster={image.childImageSharp.fluid}\r\n                                title={title}\r\n                            />\r\n                        )}\r\n                        {format === 'quote' && <Quote text={quote_text} author={quote_author}/>}\r\n                        {format === 'link' && <Linked link={link}/>}\r\n                        {format === 'gallery' && <Gallery images={images}/>}\r\n                        {category && <BlogCategory to={slugify(category)}>{category}</BlogCategory>}\r\n                    </BlogMedia>\r\n                    <BlogContent>\r\n                        {title && <BlogTitle><Anchor path={`/${slug}`}>{title}</Anchor></BlogTitle>}\r\n                        {excerpt && <BlogExcerpt>{excerpt}</BlogExcerpt>}\r\n                    </BlogContent>\r\n                </BlogInner>\r\n            </BlogWrapper>\r\n            <ModalVideo\r\n                channel={video_channel}\r\n                videoId={video_id}\r\n                isOpen={videoOpen}\r\n                onClose={modalVideoClose}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nBlog.propTypes = {\r\n    image: PropTypes.object,\r\n    title: PropTypes.string,\r\n    date: PropTypes.string\r\n}\r\n\r\nexport default Blog\r\n","import { includes, orderBy } from 'lodash'\r\n\r\nexport class SimilarArticlesFactory {\r\n  // (1.) Create by passing in articles, currentSlug\r\n  constructor (articles, currentArticleSlug) {\r\n    // (2.) Don't include the current article in articles list\r\n    this.articles = articles.filter(\r\n      (aArticle) => aArticle.slug !== currentArticleSlug);\r\n\r\n    this.currentArticleSlug = currentArticleSlug;\r\n    // (3.) Set default values\r\n    this.maxArticles = 3;\r\n    this.category = null;\r\n    this.tags = []\r\n  }\r\n\r\n  // (4.) Builder pattern usage\r\n  setMaxArticles (m) {\r\n    this.maxArticles = m;\r\n    return this;\r\n  }\r\n\r\n  setCategory (aCategory) {\r\n    this.category = aCategory;\r\n    return this;\r\n  }\r\n\r\n  setTags (tagsArray) {\r\n    this.tags = tagsArray;\r\n    return this;\r\n  }\r\n\r\n  getArticles () {\r\n    const { category, tags, articles, maxArticles } = this;\r\n    // (5.) We use an Identity Map to keep track of score\r\n    const identityMap = {};\r\n\r\n    if (!!tags === false || tags.length === 0) {\r\n      console.error('SimilarArticlesFactory: Tags not provided, use setTags().')\r\n      return [];\r\n    }\r\n\r\n    if (!!category === false) {\r\n      console.error('SimilarArticlesFactory: Category not provided, use setCategory().')\r\n      return [];\r\n    }\r\n\r\n    function getSlug (article) {\r\n      return article.slug;\r\n    }\r\n\r\n    function addToMap (article) {\r\n      const slug = getSlug(article);\r\n      if (!identityMap.hasOwnProperty(slug)) {\r\n        identityMap[slug] = {\r\n          article: article,\r\n          points: 0\r\n        }\r\n      }\r\n    }\r\n\r\n    // (7.) For category matches, we add 2 points\r\n    function addCategoryPoints (article, category) {\r\n      const categoryPoints = 2;\r\n      const slug = getSlug(article);\r\n\r\n      if (article.category === category) {\r\n        identityMap[slug].points += categoryPoints;\r\n      }\r\n    }\r\n\r\n    // (8.) For tags matches, we add 1 point\r\n    function addTagsPoints (article, tags) {\r\n      const tagPoint = 1;\r\n      const slug = getSlug(article);\r\n      \r\n      article.tags.forEach((aTag) => {\r\n        if (includes(tags, aTag)) {\r\n          identityMap[slug].points += tagPoint;\r\n        }\r\n      })\r\n    }\r\n\r\n    function getIdentityMapAsArray () {\r\n      return Object.keys(identityMap).map((slug) => identityMap[slug]);\r\n    }\r\n    \r\n    // (6.) Map over all articles, add to map and add points\r\n    for (let article of articles) {\r\n      addToMap(article);\r\n      addCategoryPoints(article, category);\r\n      addTagsPoints(article, tags)\r\n    }\r\n    \r\n    // (9.) Convert the identity map to an array\r\n    const arrayIdentityMap = getIdentityMapAsArray();\r\n\r\n    // (10.) Use a lodash utility function to sort them \r\n    // by points, from greatest to least\r\n    const similarArticles = orderBy(\r\n      arrayIdentityMap, ['points'], ['desc']\r\n    )\r\n\r\n    // (11. Take the max number articles requested)\r\n    return similarArticles.splice(0, maxArticles);\r\n  }\r\n}","import styled from \"styled-components\";\r\nimport {device} from '../../../theme'\r\n\r\nexport const RelatedPostsWrap = styled.div `\r\n    margin-bottom: 2px;\r\n    ${device.medium}{\r\n       margin-bottom: 0;\r\n    }\r\n`;","import React from 'react'\r\nimport {Row, Col} from 'reactstrap'\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport { getPostsFromQuery } from '../../../utils/utilFunctions'\r\nimport Blog from '../../../components/blog/layout-four'\r\nimport Heading from '../../../components/shared/heading'\r\nimport { SimilarArticlesFactory } from './SimilarArticlesFactory'\r\nimport {RelatedPostsWrap} from './related-posts.stc'\r\n\r\nconst RelatedPosts = (props) => {\r\n    const relatedPosts = useStaticQuery(graphql `\r\n        query SimilarArticles {    \r\n            posts: allMarkdownRemark(\r\n                sort: { order: DESC, fields: [frontmatter___date] }\r\n                limit: 1000\r\n            ) {\r\n                edges {\r\n                    node {\r\n                        fields {\r\n                            slug\r\n                        }\r\n                        frontmatter {\r\n                            title\r\n                            tags\r\n                            format\r\n                            category \r\n                            video_link\r\n                            quote_text\r\n                            quote_author\r\n                            link\r\n                            image {\r\n                                childImageSharp {\r\n                                    fluid(maxWidth: 520, maxHeight: 350, quality: 100, srcSetBreakpoints: 6) {\r\n                                        ...GatsbyImageSharpFluid_withWebp\r\n                                        presentationWidth\r\n                                        presentationHeight\r\n                                    }\r\n                                }\r\n                            }\r\n                            images {\r\n                                childImageSharp {\r\n                                    fluid(maxWidth: 520, maxHeight: 350, quality: 100, srcSetBreakpoints: 6) {\r\n                                        ...GatsbyImageSharpFluid_withWebp\r\n                                        presentationWidth\r\n                                        presentationHeight\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        excerpt(pruneLength: 80)\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const posts = relatedPosts.posts;\r\n    const { category, tags, currentArticleSlug, ...restProps } = props\r\n    const articles = getPostsFromQuery(posts);\r\n    const similarArticles = new SimilarArticlesFactory(articles, currentArticleSlug)\r\n    .setMaxArticles(2)\r\n    .setCategory(category)\r\n    .setTags(tags)\r\n    .getArticles()\r\n    const {headingCSS, blogCSS} = restProps;\r\n\r\n    return (\r\n        <RelatedPostsWrap>\r\n            <Row>\r\n                <Col>\r\n                    <Heading {...headingCSS}>Related Posts</Heading>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {similarArticles.map((data, i) => (\r\n                    <Col md={6} key={`related-${i}`}>\r\n                        <Blog\r\n                            {...blogCSS}\r\n                            content={{\r\n                                ...data.article\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        </RelatedPostsWrap>\r\n    )\r\n}\r\n\r\nRelatedPosts.defaultProps = {\r\n    headingCSS: {\r\n        as: 'h3',\r\n        fontSize: '16px',\r\n        fontWeight: 600,\r\n        mb: '31px'\r\n    },\r\n    blogCSS: {\r\n        mb: '45px'\r\n    }\r\n}\r\n\r\nexport default RelatedPosts","import React from 'react'\r\nimport {useStaticQuery, graphql} from 'gatsby'\r\nimport { FiFacebook, FiLinkedin, FiTwitter } from \"react-icons/fi\";\r\nimport Social, {SocialLink} from '../../shared/social'\r\n\r\nconst SocialShare = ({title, slug, ...restProps}) => {\r\n    const socialData = useStaticQuery(graphql `\r\n        query SiteUrlQuery {\r\n            site {\r\n                siteMetadata {\r\n                    siteUrl\r\n                }\r\n            }\r\n        }\r\n    `);\r\n    const {siteUrl} = socialData.site.siteMetadata\r\n    \r\n    return (\r\n        <Social {...restProps}>\r\n            <SocialLink path={`http://www.facebook.com/sharer.php?u=${siteUrl}${slug}`}>\r\n                <FiFacebook/>\r\n            </SocialLink>\r\n            <SocialLink path={`http://www.linkedin.com/shareArticle?mini=true&url=${siteUrl}${slug}&title=${title}&source=${siteUrl}`}>\r\n                <FiLinkedin/>\r\n            </SocialLink>\r\n            <SocialLink path={`https://twitter.com/share?url=${siteUrl}${slug}&amp;text=${title}&amp;hashtags=fatima`}>\r\n                <FiTwitter/>\r\n            </SocialLink>\r\n        </Social>\r\n    )\r\n}\r\n\r\nSocialShare.defaultProps = {\r\n    mr: '15px',\r\n    width: '34px',\r\n    height: '34px',\r\n    lineHeight: '26px',\r\n    borderWidth: '2px',\r\n    layout: 2,\r\n    color: 'shark',\r\n    borderColor: 'shark'\r\n}\r\n\r\nexport default SocialShare\r\n","import styled from \"styled-components\";\r\nimport { themeGet } from '@styled-system/theme-get';\r\nimport quoteIcon from '../../assets/img/icons/quote-icon.png'\r\nimport { WidgetBoxWrap } from '../../components/shared/widget-box/widget-box.stc'\r\nimport { device } from '../../theme'\r\n\r\nexport const SinglePostArea = styled.section`\r\n    padding-top: 60px;\r\n    padding-bottom: 60px;\r\n    ${device.small}{\r\n        padding-top: 80px;\r\n        padding-bottom: 80px;\r\n    }\r\n    ${device.medium}{\r\n        padding-top: 100px;\r\n        padding-bottom: 51px;\r\n    }\r\n`;\r\n\r\nexport const SinglePostWrap = styled.article`\r\n    .post-content{\r\n        p{\r\n            font-size: 14px;\r\n            margin-bottom: 26px;\r\n            line-height: 1.714;\r\n            &:first-letter{\r\n                text-transform: capitalize;\r\n            }\r\n        }\r\n        blockquote{\r\n            position: relative;\r\n            max-width: 660px;\r\n            margin-left: auto;\r\n            margin-right: auto;\r\n            margin-bottom: 35px;\r\n            text-align: center;\r\n            p{\r\n                font-size: 18px;\r\n                font-weight: 500;\r\n                line-height: 1.667;\r\n                color: ${themeGet(\"colors.headingColor\")};\r\n            }\r\n            &:before{\r\n                position: absolute;\r\n                content: \"\";\r\n                background: url(${quoteIcon}) no-repeat scroll center/cover;\r\n                left: 50%;\r\n                top: 50%;\r\n                transform: translate(-50%, -50%);\r\n                width: 125px;\r\n                height: 109px;\r\n                z-index: -1;\r\n            }\r\n        }\r\n        figcaption{\r\n            margin-top: 5px;\r\n            text-align: center;\r\n        }\r\n        ul{\r\n            margin-left: 0;\r\n            padding-left: 0;\r\n            list-style: none;\r\n            margin-bottom: 20px;\r\n            li{\r\n                position: relative;\r\n                font-size: 14px;\r\n                color: ${themeGet(\"colors.headingColor\")};\r\n                padding-left: 22px;\r\n                &:before{\r\n                    position: absolute;\r\n                    content: \"\";\r\n                    width: 6px;\r\n                    height: 6px;\r\n                    background: #99999c;\r\n                    border-radius: 50%;\r\n                    left: 0;\r\n                    top: 50%;\r\n                    transform: translateY(-50%)\r\n                }\r\n                &:not(:last-child){\r\n                    margin-bottom: 12px;\r\n                }\r\n            }\r\n        }\r\n        p {\r\n            code {\r\n                margin-top: 10px;\r\n                display: block;\r\n            }\r\n        }\r\n        .gatsby-resp-image-background-image,\r\n        img{\r\n            border-radius: 5px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const PostMedia = styled.div`\r\n    margin-bottom: 25px;\r\n`;\r\n\r\nexport const PostHeader = styled.header`\r\n    margin-bottom: 21px;\r\n`;\r\n\r\nexport const PostTitle = styled.h2`\r\n    color: #0e1b47;\r\n    font-size: 24px;\r\n    margin-top: 11px;\r\n    margin-bottom: 21px;\r\n    line-height: 1.4;\r\n    ${device.small}{\r\n        line-height: ${themeGet(\"lineHeights.heading\")};\r\n    }\r\n`;\r\n\r\nexport const PostMeta = styled.div`\r\n\r\n`;\r\n\r\nexport const PostFooter = styled.footer`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    flex-wrap: wrap;\r\n    padding-top: 20px;\r\n    padding-bottom: 20px;\r\n    margin-top: 45px;\r\n    border-top: 1px solid ${themeGet(\"colors.borderColor\")};\r\n    border-bottom: 1px solid ${themeGet(\"colors.borderColor\")};\r\n`;\r\n\r\nexport const PostShare = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    padding-top: 5px;\r\n    h4{\r\n        font-size: 16px;\r\n        margin-right: 30px;\r\n    }\r\n`;\r\n\r\nexport const PostTags = styled.div`\r\n    padding-top: 5px;\r\n`;\r\n\r\nexport const SidebarWrap = styled.aside`\r\n    ${WidgetBoxWrap}{\r\n        &:not(:last-child){\r\n            margin-bottom: 30px;\r\n        }\r\n    }\r\n`;\r\n\r\n\r\n","import React, { useState } from 'react'\r\nimport { graphql, Link } from 'gatsby'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport SEO from \"../../components/seo\"\r\nimport Layout from \"../../containers/layout/layout\"\r\nimport Header from '../../containers/layout/header'\r\nimport Footer from '../../containers/layout/footer'\r\nimport BlogMeta, { CommentNumber, Category, Tags } from '../../components/blog/blog-meta'\r\nimport { Thumbnail, Video, Quote, Linked, Gallery } from '../../components/blog/blog-media'\r\nimport ModalVideo from '../../components/shared/modal-video'\r\nimport { slugify } from '../../utils/utilFunctions'\r\nimport SearchWidget from '../../containers/widgets/search'\r\nimport RecentPostWidget from '../../containers/widgets/recent-post'\r\nimport InstagramWidget from '../../containers/widgets/instagram'\r\nimport CategoryWidget from '../../containers/widgets/categories'\r\nimport AuthorWidget from '../../containers/widgets/author'\r\nimport CTAWidget from '../../containers/widgets/cta'\r\nimport SubscribeWidget from '../../containers/widgets/subscribe'\r\nimport InstagramArea from '../../containers/global/instagram'\r\nimport Comment from '../../containers/global/comment'\r\nimport RelatedPosts from '../../containers/global/related-posts'\r\nimport SocialShare from '../../components/socials/social-share'\r\nimport {\r\n    SinglePostArea,\r\n    SinglePostWrap,\r\n    PostMedia,\r\n    PostHeader,\r\n    PostTitle,\r\n    PostMeta,\r\n    PostFooter,\r\n    PostShare,\r\n    PostTags,\r\n    SidebarWrap\r\n} from './single-blog.stc'\r\n\r\nconst SingleBlog = ({ data, pageContext, location, ...restProps }) => {\r\n    const { dateSlug, slug, postID, authorId } = data.markdownRemark.fields;\r\n    const {\r\n        category, date, format, title, image,\r\n        video_link, quote_text, quote_author,\r\n        link, images, author, tags\r\n    } = data.markdownRemark.frontmatter;\r\n    const { html } = data.markdownRemark;\r\n    let video_arr, video_id, video_channel;\r\n    if (video_link) {\r\n        video_arr = video_link.split('=', -1);\r\n        video_id = video_arr[1];\r\n        video_channel = video_link.split(\".\")[1];\r\n    }\r\n    const [videoOpen, setVideoOpen] = useState(false);\r\n    const modalVideoOpen = () => {\r\n        setVideoOpen(true)\r\n    }\r\n    const modalVideoClose = () => {\r\n        setVideoOpen(false)\r\n    }\r\n\r\n    return (\r\n        <Layout>\r\n            <SEO title={title} />\r\n            <Header />\r\n            <div className=\"main-content\">\r\n                <SinglePostArea {...restProps}>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col lg={8}>\r\n                                <SinglePostWrap>\r\n                                    <PostMedia>\r\n                                        {(format === 'image' || format === 'standard') && (\r\n                                            <Thumbnail path={`/${slug}`} image={image} title={title} />\r\n                                        )}\r\n                                        {format === 'video' && (\r\n                                            <Video\r\n                                                onClick={modalVideoOpen}\r\n                                                poster={image.childImageSharp.fluid}\r\n                                                title={title}\r\n                                            />\r\n                                        )}\r\n                                        {format === 'quote' && <Quote text={quote_text} author={quote_author} />}\r\n                                        {format === 'link' && <Linked link={link} />}\r\n                                        {format === 'gallery' && <Gallery images={images} />}\r\n                                    </PostMedia>\r\n                                    <PostHeader>\r\n                                        {category && <Category slug={`/category/${slugify(category)}`} text={category} />}\r\n                                        {title && <PostTitle>{title}</PostTitle>}\r\n                                        <PostMeta>\r\n                                            {date && (\r\n                                                <BlogMeta>\r\n                                                    <Link to={`/date/${slugify(dateSlug)}`}>{date}</Link>\r\n                                                </BlogMeta>\r\n                                            )}\r\n                                            {author && (\r\n                                                <BlogMeta>\r\n                                                    <Link to={`/author/${slugify(authorId)}`}>{author.name}</Link>\r\n                                                </BlogMeta>\r\n                                            )}\r\n                                            <BlogMeta>\r\n                                                <CommentNumber slug={slug} title={title} id={postID} />\r\n                                            </BlogMeta>\r\n                                        </PostMeta>\r\n                                    </PostHeader>\r\n                                    <div className=\"post-content\" dangerouslySetInnerHTML={{ __html: html }} />\r\n                                    <PostFooter>\r\n                                        <PostShare>\r\n                                            <h4>Share This:</h4>\r\n                                            <SocialShare\r\n                                                title={title}\r\n                                                slug={slug}\r\n                                            />\r\n                                        </PostShare>\r\n                                        <PostTags>\r\n                                            <Tags tags={tags} />\r\n                                        </PostTags>\r\n                                    </PostFooter>\r\n                                </SinglePostWrap>\r\n                                <Comment slug={slug} title={title} id={postID} />\r\n                                <RelatedPosts category={category} tags={tags} currentArticleSlug={slug} />\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <SidebarWrap>\r\n                                    <AuthorWidget\r\n                                        content={author}\r\n                                    />\r\n                                    <SearchWidget />\r\n                                    <RecentPostWidget />\r\n                                    <InstagramWidget />\r\n                                    <CategoryWidget />\r\n                                    <CTAWidget />\r\n                                    <SubscribeWidget />\r\n                                </SidebarWrap>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </SinglePostArea>\r\n                <InstagramArea />\r\n            </div>\r\n            <Footer />\r\n            <ModalVideo\r\n                channel={video_channel}\r\n                videoId={video_id}\r\n                isOpen={videoOpen}\r\n                onClose={modalVideoClose}\r\n            />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const postQuery = graphql`\r\n    query($slug: String!){\r\n        markdownRemark(fields: {slug: {eq: $slug}}){\r\n            fields {\r\n                dateSlug\r\n                authorId\r\n                slug\r\n                postID\r\n            }\r\n            frontmatter {\r\n                title\r\n                category\r\n                tags\r\n                date(formatString: \"LL\")\r\n                format\r\n                video_link\r\n                quote_text\r\n                quote_author\r\n                link\r\n                image {\r\n                  childImageSharp {\r\n                    fluid(maxWidth: 839, maxHeight: 455, quality: 100, srcSetBreakpoints: 6) {\r\n                      ...GatsbyImageSharpFluid_withWebp\r\n                      presentationWidth\r\n                      presentationHeight\r\n                    }\r\n                  }\r\n                }\r\n                images {\r\n                    childImageSharp {\r\n                        fluid(maxWidth: 839, maxHeight: 455, quality: 100, srcSetBreakpoints: 6) {\r\n                            ...GatsbyImageSharpFluid_withWebp\r\n                            presentationWidth\r\n                            presentationHeight\r\n                        }\r\n                    }\r\n                }\r\n                author{\r\n                    name\r\n                    tagline\r\n                    image {\r\n                        childImageSharp {\r\n                            fixed(width: 180, height: 180, quality: 100) {\r\n                                ...GatsbyImageSharpFixed_withWebp\r\n                            }\r\n                        }\r\n                    }\r\n                    social {\r\n                        facebook\r\n                        instagram\r\n                        linkedin\r\n                        twitter\r\n                        youtube\r\n                    }\r\n                }\r\n            }\r\n            html\r\n        }\r\n    }\r\n`;\r\n\r\n\r\nexport default SingleBlog\r\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n"],"sourceRoot":""}